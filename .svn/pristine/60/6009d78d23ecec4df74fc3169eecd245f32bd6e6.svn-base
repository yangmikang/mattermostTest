package kr.go.distep.main.web;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.go.distep.cmmn.file.vo.FileGroupVO;
import kr.go.distep.main.service.BoardMasterService;
import kr.go.distep.main.service.UploadService;
import kr.go.distep.main.service.vo.BoardVo;
import kr.go.distep.user.vo.UserVO;
import kr.go.distep.util.ArticlePage;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/board")
@Controller
public class BoardController {

	@Autowired
	BoardMasterService boardmasterservice;
	
    @Autowired
    UploadService uploadService;
    
	
	@RequestMapping("/boardthumb.do")
	public String Thumb() {
		return "board/boardThumbnail";
	}
	

	   // 공통 게시판 화면
    @RequestMapping(value = "/boardList.do", method = RequestMethod.GET)
    public String boardListPage(@RequestParam("boardMasterCode") String boardMasterCode, Model model) {
        model.addAttribute("boardMasterCode", boardMasterCode);
        return "board/board"; //  실제 JSP: /WEB-INF/views/board/board.jsp
    }

    // 비동기 리스트
    @ResponseBody
    @RequestMapping(value = "/listAjax.do", method = RequestMethod.POST)
    public ArticlePage<BoardVo> listAjax(@RequestBody Map<String, Object> map) {

        int currentPage = 1;
        String keyword = "";
        String boardMasterCode = "";

        if (map.get("currentPage") != null) {
            try {
                currentPage = Integer.parseInt(map.get("currentPage").toString());
            } catch (NumberFormatException e) {
                currentPage = 1;
            }
        }

        if (map.get("keyword") != null) {
            keyword = map.get("keyword").toString();
        }
        if (map.get("boardMasterCode") != null) {
            boardMasterCode = map.get("boardMasterCode").toString();
        }

        map.put("currentPage", currentPage);
        map.put("keyword", keyword);
        map.put("boardMasterCode", boardMasterCode);

        int getTotal = boardmasterservice.getTotal(map);
        List<BoardVo> boardList = boardmasterservice.list(map);

        for (BoardVo vo : boardList) {
            if (vo.getFileGroupNo() > 0) {
                FileGroupVO fileGroupVO = uploadService.getFileGroupWithDetails(vo.getFileGroupNo());
                vo.setFileGroupVO(fileGroupVO);
            }
        }

        return new ArticlePage<>(getTotal, currentPage, 10, boardList, keyword, "ajax");
    }


	// 게시판 상세
		
		@RequestMapping(value = "/detail.do", method = RequestMethod.GET)
		public String detail(BoardVo boardVo, Model model) {
		    boardVo = boardmasterservice.detail(boardVo); // board 테이블에서 조회됨

		    log.info(">> fileGroupNo: {}", boardVo.getFileGroupNo()); // 디버깅용

		    if (boardVo.getFileGroupNo() > 0) {
		        FileGroupVO fileGroupVO = uploadService.getFileGroupWithDetails(boardVo.getFileGroupNo());
		        boardVo.setFileGroupVO(fileGroupVO);
		        log.info("fileDetailVOList: {}", fileGroupVO.getFileDetailVOList());
		    }

		    
		    
		    model.addAttribute("boardVo", boardVo);
		    return "board/boardDetail";
		}

		@RequestMapping(value = "/boardInsert.do", method = RequestMethod.POST)
		public String createCm(
		    BoardVo boardVo,
		    Model model,
		    HttpSession session,
		    RedirectAttributes redirectAttributes,
		    @RequestParam(value = "thumbnailFile", required = false) MultipartFile thumbnailFile,
		    @RequestParam(value = "boardMasterCode", required = false) String boardMasterCode
		) {

		    UserVO user = (UserVO) session.getAttribute("loggedInUser");

		    // 로그인 체크
		    if (user == null || user.getId() == null || user.getId().trim().isEmpty()) {
		        redirectAttributes.addFlashAttribute("error", "로그인 후 이용 가능합니다.");
		        return "redirect:/board/list.do";
		    }

		    // boardMasterCode 기본값 처리
		    if (boardMasterCode == null || boardMasterCode.trim().isEmpty()) {
		        boardMasterCode = "N01";
		    }
		    boardVo.setBoardMasterCode(boardMasterCode);

		    boardVo.setUserId(user.getId());
		    boardVo.setThumbnailFile(thumbnailFile);

		    int result = this.boardmasterservice.boardInsert(boardVo);
		    log.debug("boardVo: " + boardVo);
		    log.debug("boardCode: " + boardVo.getBoardCode());

		    // boardMasterCode에 따라 리다이렉트 경로 다르게 설정
		    String redirectUrl;
		    switch (boardMasterCode) {
		        case "N01":
		            redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		            break;
		        case "N02":
		            redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		            break;
		        case "N03":
		            redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		            break;
		        case "N04":
		        	redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		        	break;
		        case "N05":
		        	redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		        	break;
		        case "N06":
		        	redirectUrl = "/board/detail.do?boardCode=" + boardVo.getBoardCode();
		        	break;
		        default:
		            redirectUrl = "/board/home.do?boardCode=" + boardVo.getBoardCode(); // 기본값
		            break;
		    }

		    return "redirect:" + redirectUrl;
		}


	// 게시판 등록페이지 로딩
	@RequestMapping(value ="/boardPage.do", method=RequestMethod.GET)
	public String boardInsertForm() {
	    return "board/boardInsert"; 
}
	// 게시판 등록페이지 로딩
	@RequestMapping(value ="/boarThumbIst.do", method=RequestMethod.GET)
	public String boardThumbInsertForm() {
		return "board/boardThumbInsert"; 
	}
	
	// 게시판 수정
	
	@RequestMapping(value="/update.do",method = RequestMethod.POST)
	public String updateCm(BoardVo boardVo, @RequestParam(value = "uploadFiles", required = false) MultipartFile[] uploadFiles,
											@RequestParam(value = "deletedFileIds", required = false) String deletedFileIds,
										   @RequestParam(value = "thumbnailFile", required = false) MultipartFile thumbnailFile
											) {
		
		log.info("boardVo" +boardVo);
		int result =this.boardmasterservice.updateBd(boardVo);
		log.info("resutl " + result);
		
		 boardVo.setUploadFiles(uploadFiles);
	   boardVo.setThumbnailFile(thumbnailFile);
		// boardVo.setDeletedFileIds(deletedFileIds);
		 
		return "redirect:/board/detail.do?boardCode="+boardVo.getBoardCode();
		
		
	}
	// 게시판 삭제
	@RequestMapping(value = "/delete.do", method = RequestMethod.POST)
	public String deleteCm(BoardVo boardVo) {

	    log.info("boardVo: " + boardVo);

	    int result = this.boardmasterservice.deleteBd(boardVo);
	    log.info("result: " + result);

	    // 분기 처리된 redirect URL
	    String redirectUrl;
	    String boardMasterCode = boardVo.getBoardMasterCode();

	    switch (boardMasterCode) {
	        case "N01":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N01";
	            break;
	        case "N02":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N02";
	            break;
	        case "N03":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N03";
	            break;
	        case "N04":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N04";
	            break;
	        case "N05":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N05";
	            break;
	        case "N06":
	            redirectUrl = "/board/boardList.do?boardMasterCode=N06";
	            break;
	        default:
	            redirectUrl = "/board/boardList.do?boardMasterCode=N01";
	            break;
	    }

	    return "redirect:" + redirectUrl;
	}

	
	
	
	
	
	
	
}