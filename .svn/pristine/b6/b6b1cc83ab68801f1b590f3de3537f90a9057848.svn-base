<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport"
		content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" />
	<meta name="keywords" content="" />
	<meta name="description" content="" />
	<meta name="format-detection" content="telephone=no" />
	<link rel="apple-touch-icon" sizes="180x180" href="../../resources/img/guide/favicon_180.png">
	<link rel="icon" type="image/png" sizes="512x512" href="../../resources/img/guide/favicon_512.png">
	<link rel="icon" type="image/png" sizes="192x192"  href="../../resources/img/guide/favicon_192.png">
	<link rel="icon" type="image/png" sizes="32x32" href="../../resources/img/guide/favicon_32.png">
	<title>GINI - Global Innopolis Network Initiative</title>
	<link href="../../resources/css/swiper-bundle.min.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/pattern_css.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_common.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_content.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_layout.css" type="text/css" rel="stylesheet" />

	 <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.css' rel='stylesheet' />
	<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
	<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/locales/ko.global.min.js"></script>

<title>Insert title here</title>
</head>
<body>

		<c:if test="${empty sessionScope.loggedInUser}">
			<script type="text/javascript">
				alert("You can use it after logging in.");
				location.href = "${pageContext.request.contextPath}/login.do";
			
			</script>
		</c:if>

<div id="wrap">
		<!-- 본문 바로가기 영역 -->
		<!-- //본문 바로가기 영역 -->
		<!-- 상단 배너영역 -->
		<!-- //상단 배너영역 -->

		<!-- 헤더 영역 -->
				<!-- //헤더 상단 기타메뉴 -->
			<!-- //헤더 컨텐츠 영역  -->
			
			<!-- 모바일 : 전체메뉴 -->
		<!-- //헤더 영역 -->

		<!-- 컨테이너 영역 -->
		<div id="container">
		
				<!-- breadcrumb -->
			<div class="page-title-wrap visual img-members">
				<div class="visual-filter"></div>
				<div class="inner">
					<!-- breadcrumb -->
					<nav class="breadcrumb-wrap" aria-label="브레드크럼">
						<ol class="breadcrumb">
							<li class="home"><a href="#" class="txt">Home</a></li>
							<li><a href="#" class="txt">Programs</a></li>
							<li><a href="#" class="txt">Events</a></li> 
						</ol>
					</nav>
					<!-- breadcrumb -->
					<div class="visual-area">
						<h2 class="h-tit">Schedule registration</h2>
						<p>Schedule registration</p>
					</div>
				</div>
			</div>
			<!-- breadcrumb -->

			<!-- 컨텐츠 영역 -->
			<div class="inner">
				<!-- 페이지 타이틀 영역 -->
				<button type="button" onclick="ffefee()" style="display: none;" >dwdwwwd</button>
				<div class="page-title-wrap">
				<!-- //페이지 타이틀 영역 -->
				<!-- 일정등록 폼 -->
				 <div class="gini-cont-wrap">
					<div class="gini-cont-box">
						<div class="row cont100">
							<!-- 폼그룹 left -->
							<input type="file" name="uploadFiles" multiple id="uploadFiles"style="display:none;" onchange="handleFileUpload(event)" />
							<div class="cont-left cont50">
								<!-- 폼그룹 -->
								<div class="form-group">
									<div class="form-tit">
										<label for="consult_name">Event Title</label>
									</div>
									<div class="form-conts">
										<input type="text" id="consult_name" class="form-control" placeholder="Event Title">
									</div>
								</div>
								<input type="file" name="thumbnail" id="thumbnail" style="display:none;" onchange="" >
								<!-- //폼그룹 -->
								<!-- 날짜 입력 필드 폼그룹 -->
								<div class="form-group">
									<div class="form-tit">
										<label for="cal">Start Date & Time</label>
									</div>
									<div class="form-conts form-row">
										<div class="form-conts datepicker-conts">
											<div class="datepicker-input">
											 <input type="text" class="form-control datepicker startdate" id="startdate" placeholder="Select date">
    
											
											
											</div>
										</div>
									</div>
								</div>
								<!-- //날짜 입력 필드 폼그룹 -->
								<!-- 날짜 입력 필드 폼그룹 -->
								<div class="form-group">
									<div class="form-tit">
										<label for="cal">End Date & Time</label>
									</div>
									<div class="form-conts form-row">
										<div class="form-conts datepicker-conts">
											<div class="datepicker-input">
												  <input type="text" class="form-control datepicker enddate" id="enddate" placeholder="Select date">
    
											</div>
										</div>
									</div>
								</div>
							</div>
							<!-- //폼그룹 left -->
							<!-- cont-right -->
							<div class="cont-right cont50">
								<!-- 폼그룹 -->
								<div class="form-group">
									<div class="form-tit">
										<label for="consult_name">Event Description</label>
									</div>
									<div class="form-conts">
										<input type="text" id="description" class="form-control" placeholder="Event Description">
									</div>
								</div>
								<!-- //폼그룹 -->
								<!-- 폼그룹 -->
								<div class="form-group">
									<div class="form-tit">
										<label for="consult_name">Organizer</label>
									</div>
									<div class="form-conts">
										<select class="form-select lg" id="selectOrg" title="선택">
											<option value="" >Organizer</option>
											<option value="GINI">GINI</option>
											<option value="City of Daejeon">City of Daejeon</option>
											<option value="City of Dortmund">City of Dortmund</option>
											<option value="City of Malaga">City of Malaga</option>
											<option value="County of Montgomery, MD">County of Montgomery, MD</option>
											<option value="City of Seattle">City of Seattle</option>
											<option value="Province of Quebec">Province of Quebec</option>
										</select>
									</div>
								</div>
									<div class="form-group">
									<div class="form-tit">
										<label for="consult_name">External Link</label>
									</div>
									<div class="form-conts">
										<input type="text" id="link" class="form-control" placeholder="https://example.com">
									</div>
								</div>
								<!-- <div class="form-group chk-area">
								  <div class="form-tit">
								    <label for="consult_name">Event Status</label>
								  </div>
								  <div class="form-conts form-row">
								    <div class="form-check lg">
								      <input type="radio" name="" id="upcoming" value="UPCOMING" checked>
								      <label for="upcoming">Upcoming</label>
								    </div>
								    <div class="form-check lg">
								      <input type="radio" name="" id="ongoing" value="ONGOING">
								      <label for="ongoing">Ongoing</label>
								    </div>
								  </div>
								</div> -->
								

								<!-- //폼 끝 -->
							</div>
							<!-- //cont-right -->
						</div>
					</div>

					<div class="gini-cont-box">
						<div class="row">
							<!-- 파일업로드 -->
							<div class="file-upload cont50" ondragover="f_over()"   ondrop="f_drop()">
								<p class="txt">Please drag and drop the file you wish to attach here, or click the Select File button to select the file directly.</p>
								<button type="button" class="btn primary ico-before ico-upload md" onclick="document.getElementById('uploadFiles').click()">
Select file</button>
							</div>
							<!-- //파일업로드 -->
							<!-- 파일업로드 -->
							<div class="file-upload-result cont50">
								<div class="upload-top">
									<div class="file-total"><span class="current">0</span> / 6</div>
								</div>
								<ul class="upload-list" id="fileListArea">
								</ul>
								<div class="upload-delete-btn">
									<button type="button" class="btn btn-txt ico-before ico-del sm h-auto " onclick="deleteAllFiles()">delete all</button>
								</div>
							</div>
							<!-- //파일업로드 리스트 -->
						</div>
						<div class="page-btn-wrap both" >
							<div>
							      <!-- Other / Unknown -->
								<button type="button" class="btn primary" onclick="location.href='${pageContext.request.contextPath}/calendar.do'">Go to list</button>
							</div>
							<div>
							<button type="button" class="btn primary"onclick="registerEvent()">Register</button>
							</div>
						</div>
						
					</div>
				 </div>
				<!-- //일정등록 폼 -->

					

			</div>
			<!-- //컨텐츠 영역 -->
		</div>
		<!-- //컨테이너 영역 -->

		<!-- 푸터 영역 -->
		<!-- //푸터 영역 -->
	</div>

	<!-- //레이어 : 검색필터 -->

	<!-- 스크립트 : 라이브러리 -->
	<script src="../../resources/js/pattern/jquery.min.js"></script>

	<!-- 스크립트 : 패턴 페이지 -->
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="../../resources/js/pattern/ui-pattern-script.js"></script>
	

	<!-- 스크립트 : 컴포넌트 -->
	<script src="../../resources/js/component/ui-script.js"></script>
	<script>
	
	 function citiText(){
		 
			const citySelect = document.getElementById("selectOrg");
			const cityValue = citySelect.value;
			const cityText = citySelect.options[citySelect.selectedIndex].text;
			const description =  document.getElementById("description").value;
			
			console.log("cityText",cityText)
			 
		 }
		/* layer : 검색필터 */
		const $tag = document.querySelector(".pop-filter-top .tag-in");
		const $tagBtn = document.querySelector(".pop-filter-top #btn-toggle");
		if ($tagBtn) {
			$tagBtn.addEventListener("click", (e) => {
				if (!e.target.classList.contains("active")) {
					$tag.classList.add("is-open");
					e.target.classList.add("active");
				} else {
					$tag.classList.remove("is-open");
					e.target.classList.remove("active");
				}
			});
		}
	</script>
	<!-- CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
flatpickr(".startdate", {
	  enableTime: true,
	  dateFormat: "Y-m-d\\TH:i",
	  time_24hr: false
	});

	flatpickr(".enddate", {
	  enableTime: true,
	  dateFormat: "Y-m-d\\TH:i",
	  locale: "en",
	  time_24hr: false
	});


</script>
	
<script>


  // 전역 파일 저장 배열
  let uploadedFiles = [];

  function formatBytes(bytes) {
    if (bytes === 0) return '0KB';
    const k = 1024;
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    const size = parseFloat((bytes / Math.pow(k, i)).toFixed(1));
    const sizes = ['Bytes', 'KB', 'MB', 'GB'];
    return `\${size} \${sizes[i]}`;
  }

  function updateFileCount() {
    const countSpan = document.querySelector('.file-total .current');
    const validCount = uploadedFiles.length;
    countSpan.textContent = `\${validCount}`;
  }

  function deleteAllFiles() {
    uploadedFiles = [];
    const fileListArea = document.getElementById('fileListArea');
    fileListArea.innerHTML = '';
    updateFileCount();
  }

  function handleFileUpload(event) {
    const files = event.target.files;
    const fileListArea = document.getElementById('fileListArea');
    const allowedExtensions = [
    	  'pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt',
    	  'jpg', 'jpeg', 'png', 'gif', 'zip', 'hwp'
    	];

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const extension = file.name.split('.').pop().toLowerCase();

        if (!allowedExtensions.includes(extension)) {
          const li = document.createElement('li');
          li.classList.add('is-error');
          li.innerHTML = `
            <div class="in">
        	  <div class="file-name">\${file.name} [\${file.name.split('.').pop()}, \${formatBytes(file.size)}]</div>
                  <div class="file-btn">
                <span class="ico-invalid error"><em class="sr-only">error</em></span>
                <button type="button" class="btn btn-txt ico-before ico-del sm h-auto" onclick="this.closest('li').remove(); updateFileCount();">Delete</button>
              </div>
            </div>
            <p class="file-hint">Only the following file types can be uploaded:<br>
            pdf, doc, docx, xls, xlsx, ppt, pptx, txt, jpg, jpeg, png, gif, zip, hwp</p>
          `;
          fileListArea.appendChild(li);
          continue;
        }

        if (file.size > 20 * 1024 * 1024) {
          const li = document.createElement('li');
          li.classList.add('is-error');
          li.innerHTML = `
            <div class="in">
              <div class="file-name">\${file.name} [\${extension}, \${formatBytes(file.size)}]</div>
              <div class="file-btn">
                <span class="ico-invalid error"><em class="sr-only">에러</em></span>
                <button type="button" class="btn btn-txt ico-before ico-del sm h-auto" onclick="this.closest('li').remove(); updateFileCount();">삭제</button>
              </div>
            </div>
            <p class="file-hint">File size exceeds 20MB limit.</p>
          `;
          fileListArea.appendChild(li);
          continue;
        }

        if (uploadedFiles.length >= 6) {
          alert("You can register up to 6 files.");
          break;
        }

        uploadedFiles.push(file);
        const currentIndex = uploadedFiles.length - 1;

        const li = document.createElement('li');
        li.innerHTML = `
          <div class="in">
            <div class="file-name">\${file.name} [\${extension}, \${formatBytes(file.size)}]</div>
            <div class="file-btn">
              <button type="button" class="btn btn-txt ico-before ico-del sm h-auto"
                onclick="deleteSingleFile(\${currentIndex}, this)">Delete</button>
            </div>
          </div>
        `;
        fileListArea.appendChild(li);
      }

      updateFileCount();
      event.target.value = '';
  }

  
  function ffefee(){
	  console.log("start", document.getElementById("startdate").value);
	  console.log("end", document.getElementById("enddate").value);

	  
	  
  }
  function deleteSingleFile(index, button) {
    uploadedFiles.splice(index, 1);
    button.closest('li').remove();
    updateFileCount();
  }
  console.log("start", document.getElementById("startdate").value);
  console.log("end", document.getElementById("enddate").value);
 
  
  function escapeForJs(str) {
	  return str
	    .replace(/\\/g, '\\\\') 
	    .replace(/"/g, '\\"')   
	    .replace(/'/g, "\\'");  
	}

  function registerEvent() {
	  const titleInput = document.getElementById("consult_name");
	  const start = document.getElementById("startdate").value;
	  const end = document.getElementById("enddate").value;
	  const descriptionInput = document.getElementById("description");
	  const citySelect = document.getElementById("selectOrg");
	  const link = document.getElementById("link").value;

	  const title = titleInput.value.trim();
	  const description = descriptionInput.value.trim();
	  const organizer = citySelect.value;
    
	  const errorItems = document.querySelectorAll('#fileListArea li.is-error');
	  if (errorItems.length > 0) {
	    alert("There are invalid files in the attachment list. Please remove them before submitting.");
	    return;
	  }

	  
	  console.log("start",start)
	  console.log("end",end)
	  // 유효성 검사
	  if (!title) {
	    alert("Please enter an Event Title.");
	    titleInput.focus();
	    return;
	  }

	  if (title.length >= 50) {
	    alert("Please enter Event Title within 50 characters.");
	    titleInput.focus();
	    return;
	  }

	  if (!description) {
	    alert("Please enter an Event Description.");
	    descriptionInput.focus();
	    return;
	  }

	  if (description.length >= 1000) {
	    alert("Please enter Event Description less than 1000 characters.");
	    descriptionInput.focus();
	    return;
	  }

	  if (!start) {
	    alert("Select Start Date & Time.");
	    return;
	  }

	  if (!end) {
	    alert("Select End Date & Time.");
	    return;
	  }

	  if (new Date(start) > new Date(end)) {
	    alert("The End Date must be later than the Start Date.");
	    return;
	  }

	  if (!organizer) {
	    alert("Select an organizer.");
	    citySelect.focus();
	    return;
	  }

	  if (uploadedFiles.length > 6) {
	    alert("Up to 6 files can be registered.");
	    return;
	  }

	  const safeTitle = escapeForJs(title);
      const safedescription = escapeForJs(description);

	  const formData = new FormData();
	  formData.append("eventTitle", safeTitle);
	  formData.append("eventDescription", safedescription);
	  formData.append("startDatetime", start);
	  formData.append("endDatetime", end);
	  formData.append("organizer", organizer);
	  formData.append("externalLink", link);

	  uploadedFiles.forEach(file => {
	    formData.append("uploadFiles", file);
	  });

	  axios.post('${pageContext.request.contextPath}/calendar/register.do', formData, {
	    headers: { 'Content-Type': 'multipart/form-data' }
	  })
	  .then(() => {
	    alert('The schedule has been registered.');
	    location.href = '${pageContext.request.contextPath}/calendar.do';
	  })
	  .catch(error => {
	    console.error('등록 오류:', error);
	    alert('Schedule registration failed.');
	  });
	}


</script>


</body>
</html>