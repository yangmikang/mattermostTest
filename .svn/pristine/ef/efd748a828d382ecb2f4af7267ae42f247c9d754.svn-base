package kr.go.distep.main.web;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.go.distep.cmmn.file.vo.FileGroupVO;
import kr.go.distep.main.service.BoardMasterService;
import kr.go.distep.main.service.UploadService;
import kr.go.distep.main.service.vo.BoardVo;
import kr.go.distep.util.ArticlePage;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/board")
@Controller
public class BoardController {

	@Autowired
	BoardMasterService boardmasterservice;
	
    @Autowired
    UploadService uploadService;
    
	@RequestMapping("/home.do")
	public String home() {
		return "board/board";
	}

	// 리스트 비동기
	@ResponseBody
	@RequestMapping(value = "/listAjax.do", method = RequestMethod.POST)
	public ArticlePage<BoardVo> listAjax(@RequestBody Map<String, Object> map) {
		int getTotal = this.boardmasterservice.getTotal(map);
		int currentPage = 1;
		String keyword = "";
		if (map.get("currentPage") != null) {
			currentPage = Integer.parseInt(map.get("currentPage").toString());
		}
		  if (map.get("keyword") != null) {
		        keyword = map.get("keyword").toString();
		    }
		map.put("currentPage", currentPage);
		map.put("keyword", keyword);

		List<BoardVo> boardMasterVOList = this.boardmasterservice.list(map);

		ArticlePage<BoardVo> articlePage = new ArticlePage<BoardVo>(getTotal, currentPage, 10, boardMasterVOList, keyword,"ajax");
		return articlePage;
	}

	// 게시판 상세
		
		@RequestMapping(value = "/detail.do", method = RequestMethod.GET)
		public String detail(BoardVo boardVo, Model model) {
		    boardVo = boardmasterservice.detail(boardVo); // board 테이블에서 조회됨

		    log.info(">> fileGroupNo: {}", boardVo.getFileGroupNo()); // 디버깅용

		    if (boardVo.getFileGroupNo() > 0) {
		        FileGroupVO fileGroupVO = uploadService.getFileGroupWithDetails(boardVo.getFileGroupNo());
		        boardVo.setFileGroupVO(fileGroupVO);
		        log.info("fileDetailVOList: {}", fileGroupVO.getFileDetailVOList());
		    }

		    model.addAttribute("boardVo", boardVo);
		    return "board/boardDetail";
		}


	
	
	// 게시판 등록
	@RequestMapping(value ="/boardInsert.do" , method=RequestMethod.POST)
	public String createCm(BoardVo boardVo,Model model) {

		
		int result = this.boardmasterservice.boardInsert(boardVo);
		
		log.debug("boardVo"+boardVo);		
		log.debug("+boardVo.getBoardCode();"+boardVo.getBoardCode());		
		
		return "redirect:/board/detail.do?boardCode="+boardVo.getBoardCode();
		
		
		
	}

	// 게시판 등록페이지 로딩
	@RequestMapping(value ="/boardPage.do", method=RequestMethod.GET)
	public String boardInsertForm() {
	    return "board/boardInsert"; 
}
	
	// 게시판 수정
	
	@RequestMapping(value="/update.do",method = RequestMethod.POST)
	public String updateCm(BoardVo boardVo, @RequestParam(value = "uploadFiles", required = false) MultipartFile[] uploadFiles) {
		
		log.info("boardVo" +boardVo);
		int result =this.boardmasterservice.updateBd(boardVo);
		log.info("resutl " + result);
		
		 boardVo.setUploadFiles(uploadFiles);
		return "redirect:/board/detail.do?boardCode="+boardVo.getBoardCode();
		
		
	}
	// 게시판 삭제
	@RequestMapping(value="/delete.do",method = RequestMethod.POST)
	public String deleteCm(BoardVo boardVo) {
		
		log.info("boardVo" +boardVo);
		int result =this.boardmasterservice.deleteBd(boardVo);
		log.info("resutl " + result);
		return "redirect:/board/home.do";
		
		
	}
	
	
	
	
	
	
	
	
}