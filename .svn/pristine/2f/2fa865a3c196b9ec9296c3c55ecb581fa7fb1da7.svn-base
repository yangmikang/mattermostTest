<%@ page contentType="text/html; charset=UTF-8" language="java" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<style>
thead {
	background-color: #f9f9f9;
	border: 1px solid #ddd !important;
}

tr {
	padding: 12px;
	text-align: center;
	font-weight: 650;
	width: 100%;
	border-collapse: collapse;
	font-family: 'Segoe UI', sans-serif;
	font-size: 11pt;
	color: #4c4c4c !important;
	border: 1px solid #ddd !important;
	border-radius: 6px;
	overflow: hidden;
}

tbody  th {
	border: 1px solid #ddd !important;
	font-weight: normal !important;
}

th {
	padding: 5px;
}

.section-title {
	text-align: center;
	font-size: 20px;
	font-weight: 600;
	color: #333;
	margin: 30px 0 20px;
	position: relative;
}

.section-title::after {
	content: "";
	display: block;
	width: 50px;
	height: 3px;
	background-color: #ddd;
	margin: 8px auto 0;
	border-radius: 2px;
}

.search-box {
	display: flex;
	align-items: center;
	justify-content: center;
}

.datepicker {
	width: 40%;
}

.select-box {
	font-weight: 400 !important;
	text-align: center;
	height: 50px;
}

.form-conts {
	display: flex;
}
.box-white{
margin-bottom: 5%;
}
</style>
<body>
	<div id="container">
		<div class="page-title-wrap visual img-joint">
			<div class="visual-filter"></div>
			<div class="inner">
				<!-- breadcrumb -->
				<nav class="breadcrumb-wrap" aria-label="브레드크럼">
					<ol class="breadcrumb">
						<li class="home"><a href="${pageContext.request.contextPath}/index.do" class="txt">Home</a></li>
						<li><a href="${pageContext.request.contextPath}/userStats.do" class="txt">User Usage Statistics</a></li>
					</ol>
				</nav>
				<!-- breadcrumb -->
				<!-- 페이지 타이틀 영역 -->
				<div class="visual-area">
					<h2 class="h-tit">User Usage Statistics</h2>
				</div>
				<!-- //페이지 타이틀 영역 -->

			</div>
		</div>
		<!-- 로그인 영역 -->
		<div class="inner">
			<div class="conts-area">
				<div class="conts-wrap">
					<div class="box-white">
						<div class="search-box">
							<div class="search-box"
								style="width: 100%; padding: 16px; border: 1px solid #ccc; border-radius: 6px; background: #fafafa;">
								<div
									style="display: flex; flex-wrap: wrap; align-items: center; gap: 24px;">

									<!-- 통계 유형 -->
									<div style="display: flex; align-items: center; gap: 8px;">
										<label for="statType" style="min-width: 140px;"><strong>Statistics
												Type</strong></label> <select id="statType" class="form-select sm">
											<option value="total">Total</option>
											<option value="city">City</option>
											<option value="role">Authority</option>
										</select>
									</div>

									<!-- 연도 선택 -->
									<div style="display: flex; align-items: center; gap: 8px;">
										<label for="yearSelect" style="min-width: 60px;"><strong>Year</strong></label>
										<select id="yearSelect" class="form-select sm">
											<option value="" selected>Select year</option>
											<c:forEach begin="2024" end="2025" var="y">

												<option value="${y}">${y}</option>
											</c:forEach>

										</select>
									</div>
									<!-- 날짜 단위 선택 -->
									<div style="display: flex; align-items: center; gap: 8px;">
										<label style="min-width: 80px;"><strong>Date
												Unit</strong></label>
										<div class="form-check sm">
											<input type="radio" name="dateUnit" id="Year" value="year"
												checked> <label for="Year">Year</label>
										</div>
										<div class="form-check sm">
											<input type="radio" name="dateUnit" id="Month" value="month">
											<label for="Month">Month</label>
										</div>
										<div class="form-check sm">
											<input type="radio" name="dateUnit" id="Day" value="day">
											<label for="Day">Day</label>
										</div>
									</div>


									<!-- 날짜 범위 -->
									<div class="dir_date"
										style="display: none; align-items: center; gap: 8px;">
										<label style="min-width: 90px;"><strong>Date
												Range</strong></label> <input type="date" id="startDateInput"
											class="form-select sm datepicker startdate flatpickr-input active"
											placeholder="Select date"> <span>~</span> <input
											type="date" id="endDateInput"
											class="form-select sm datepicker startdate flatpickr-input active"
											placeholder="Select date">
									</div>

									<!-- 조회 버튼 -->
									<div
										style="display: flex; width: 100%; justify-content: center;">
										<button type="button" onclick="loadDir()" class="btn primary"
											style="margin-right: 1%;">Enter date directly</button>
										<button type="button" onclick="loadStatistics()"
											class="btn primary">Retrieve</button>
									</div>

								</div>
							</div>
						</div>
						<h2 class="section-title">Usage Statistics</h2>
					
						<!-- 통계 chart -->
						<div class="chart-section" style="display: none;">
							<canvas id="usageChart" height="100"></canvas>
						</div>
						
						<!-- 통계 table -->
						<div class="tab-cont-box">
							<table class="tbl col data">
								<thead>
									<tr>
										<th>&nbsp;</th>
										<th>Log Date</th>
										<th>Log Group</th>
										<th>Request Count</th>
									</tr>
								</thead>

								<tbody id="monthlyByRoleTbody">
									<tr>
										<td colspan="4" style="text-align: center;" class="select-box">Select
											the conditions for statistics.</td>
									</tr>
								</tbody>
							</table>
						</div>
					</div>
				</div>
			</div>

		</div>
	</div>
		
<!-- 스크립트 라이브러리 -->		
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
	/* input date en  */
	flatpickr("#startDateInput", {
		  dateFormat: "Y-m-d",
		});
	
	flatpickr("#endDateInput", {
	  dateFormat: "Y-m-d",
	});

</script>
<script>
	let usageChart = null;
			
	/* 직접입력 버튼 선택시 input date 활성화 */
	function loadDir(){
		 let dirDate = document.querySelector('.dir_date')
		 dirDate.style.display = "flex"
	}
	
	/* 직접입력 입력시 select 초기화 하기  */
	document.getElementById('startDateInput').addEventListener('change', function () {
		  document.getElementById('yearSelect').value = '';
		  document.querySelectorAll('input[name="dateUnit"]').forEach(function (radio) {
		    radio.checked = false;
		  });
		});
	
		document.getElementById('endDateInput').addEventListener('change', function () {
		  document.getElementById('yearSelect').value = '';
		  document.querySelectorAll('input[name="dateUnit"]').forEach(function (radio) {
		    radio.checked = false;
		  });
		});
	
		document.getElementById('yearSelect').addEventListener('change', function () {
		  if (document.getElementById('yearSelect').value !== '') {
		    document.getElementById('startDateInput').value = '';
		    document.getElementById('endDateInput').value = '';
		  }
		});
	
		var dateUnitRadios = document.querySelectorAll('input[name="dateUnit"]');
		for (var i = 0; i < dateUnitRadios.length; i++) {
		  dateUnitRadios[i].addEventListener('change', function () {
		    document.getElementById('startDateInput').value = '';
		    document.getElementById('endDateInput').value = '';
		  });
	}
	
	/* 통계 표 or 그래프 출력 */
	function loadStatistics() {
		const checkedRadio = document.querySelector('input[name="dateUnit"]:checked');
		
		let dateUnit = checkedRadio ? checkedRadio.value : '';
	
		const selectedYear = document.getElementById('yearSelect').value;
		
		const startDateInput = document.getElementById('startDateInput').value;
		const endDateInput = document.getElementById('endDateInput').value;
	
		if (!dateUnit && selectedYear) {
		  dateUnit = 'year';
		}
	
		const chartS = document.querySelector('.chart-section')
		chartS.style.display="block"
	    const statType = document.getElementById('statType').value;
	
		  let startDate = '';
		  let endDate = '';
		  const roleMap = {
					'A': 'Administrator',
					'C': 'Government',
					'G': 'General',
					'O': 'Institution',
					'N': 'Anonymous',
					'01': 'Daejeon',
					'02': 'Dortmund',
					'03': 'Malaga',
					'04': 'Montgomery County',
					'05': 'Seattle',
					'06': 'Quebec',
					'07': 'GINI Secretariat',
					'99': 'Other City',
				};
	
		  /* 날짜 직접 선택시 예외 처리  */
		  if (dateUnit === 'year') {
		    startDate = '2000-01-01';
		    endDate = '2099-12-31 23:59:59';
		  } else if (dateUnit === 'month') {
			    if (!selectedYear) {
			      alert("Please select a year for monthly statistics.");
			      return;
			    }
		    startDate = `\${selectedYear}-01-01`;
		    endDate = `\${selectedYear}-12-31 23:59:59`;
		  } else if (dateUnit === 'day') {
			    if (!selectedYear) {
			      alert("Select a year to view daily statistics.");
			      return;
			    }
		  	} 
		    if (new Date(startDateInput) > new Date(endDateInput)) {
		      alert("End date must be after start date.");
		      return;
		    }
		    else if (endDateInput && !startDateInput) {
		      alert("Please select a start date.");
		      return;
		    }
		    else if (startDateInput && !endDateInput) {
		      alert("Please select a end date.");
		      return;
		    }
		
	 	 const requestData = { statType };
	 		// 날짜 직접 입력
			if (startDateInput && endDateInput && !dateUnit && !selectedYear) {
			 // enddate가 startdate보다 작을 때   
			  if (new Date(startDateInput) > new Date(endDateInput)) {
			    alert("End date must be after start date.");
			    return;
			  }
			  requestData.dateUnit = 'day';
			  requestData.startDate = startDateInput;
			  requestData.endDate = endDateInput + ' 23:59:59';
			}
			
			//  라디오 = day 연도 선택 = ㅇ
			else if (dateUnit === 'day' && selectedYear) {
			  requestData.dateUnit = 'day';
			  requestData.startDate = `\${selectedYear}-01-01`;
			  requestData.endDate = `\${selectedYear}-12-31 23:59:59`;
			}
			
			// 라디오 = month  연도 선택 ㅇ
			else if (dateUnit === 'month' && selectedYear) {
			  requestData.dateUnit = 'month';
			  requestData.startDate = `\${selectedYear}-01-01`;
			  requestData.endDate = `\${selectedYear}-12-31 23:59:59`;
			}
			
			// 라디오 = year 연도 선택 ㅇ
			else if (dateUnit === 'year' && selectedYear) {
			  requestData.dateUnit = 'year';
			  requestData.startDate = `\${selectedYear}-01-01`;
			  requestData.endDate = `\${selectedYear}-12-31 23:59:59`;
			}
			
			//  라디오 = year 연도 선택 x
			else if (dateUnit === 'year' && !selectedYear) {
			  requestData.dateUnit = 'year';
			  requestData.startDate = '2000-01-01';
			  requestData.endDate = '2099-12-31 23:59:59';
			}
			
			//  아무것도 선택 x
			else if (!startDateInput && !endDateInput && !selectedYear && !dateUnit) {
			  requestData.dateUnit = 'year';
			  requestData.startDate = '2000-01-01';
			  requestData.endDate = '2099-12-31 23:59:59';
			}
			
			//  나머지 경우
			else {
			  alert("Please select a valid date range or year.");
			  return;
			}
			
		  // console.log("requestData", requestData);
		  axios.post(`${pageContext.request.contextPath}/getStatis.do`, requestData)
		    .then(res => {
		      const data = res.data;
		      const tbody = document.querySelector("#monthlyByRoleTbody");
		      tbody.innerHTML = '';
		      let tby = '';
	
		      if (data.length === 0) {
		        tbody.innerHTML = '<tr><td colspan="4" class="select-box" style="text-align:center;">No data found</td></tr>';
		        if (usageChart) usageChart.destroy();
		        return;
		      }
		      const labels = [];
		      const datasetMap = {};
	
		      data.forEach(function(row) {
		    	  var label = row.date_group;
		    	  var key = row.group_key;
		    	  var count = row.cnt;
	
		    	  if (labels.indexOf(label) === -1) {
		    	    labels.push(label);
		    	  }
	
		    	  if (!datasetMap[key]) {
		    	    var zeros = [];
		    	    for (var i = 0; i < labels.length - 1; i++) {
		    	      zeros.push(0);
		    	    }
		    	    datasetMap[key] = zeros;
		    	  }
	
		    	  datasetMap[key].push(count);
		    	});
	
	
		      Object.keys(datasetMap).forEach(function(key) {
		    	  if (datasetMap[key].length < labels.length) {
		    	    var diff = labels.length - datasetMap[key].length;
		    	    var zeros = Array(diff);
		    	    for (var i = 0; i < diff; i++) {
		    	      zeros[i] = 0;
		    	    }
		    	    datasetMap[key] = datasetMap[key].concat(zeros);
		    	  }
		    	});
	
	
		      var chartDatasets = Object.entries(datasetMap).map(function(entry, idx) {
		    	  var key = entry[0];
		    	  var values = entry[1];
		    	  const colors = ['#4e79a7', '#f28e2b', '#e15759', '#76b7b2', '#59a14f', '#edc948'];
		    	  return {
		    	    label: roleMap[key] || key,
		    	    backgroundColor: colors[idx % colors.length],
		    	    data: values,
		    	    borderWidth: 1
		    	  };
		    	});
	
		      data.forEach(function(row, idx) {
		    	  var roleName = roleMap[row.group_key] || row.group_key;
		    	  var displayKey = (row.group_key === null || row.group_key === '') ? 'Anonymous' : roleName;
	
		    	  var label = row.date_group;
	
		    	  // null이나 빈 문자열 -> Anonymous
		    	  var rawKey = row.group_key;
		    	  var key = (rawKey === null || rawKey === '') ? 'Anonymous' : rawKey;
	
		    	  var count = row.cnt;
	
		    	  if (!labels.includes(label)) {
		    	    labels.push(label);
		    	  }
	
		    	  if (!datasetMap[key]) {
		    	    datasetMap[key] = Array(labels.length - 1).fill(0);
		    	  }
	
		    	  datasetMap[key].push(count);
	
		    	  tby +=
		    	    '<tr>' +
		    	    '<th scope="row">' + row.rnum + '</th>' +
		    	    '<th>' + row.date_group + '</th>' +
		    	    '<th>' + displayKey + '</th>' +
		    	    '<th>' + row.cnt.toLocaleString() + '</th>' +
		    	    '</tr>';
		    	});
	
	
		      tbody.innerHTML = tby;
	
		      const ctx = document.getElementById('usageChart').getContext('2d');
		      if (usageChart) usageChart.destroy();
	
		      usageChart = new Chart(ctx, {
		        type: 'bar',
		        data: {
		          labels: labels,
		          datasets: chartDatasets
		        },
		        options: {
		          responsive: true,
		          plugins: {
		            legend: {
		              position: 'top',
		            },
		            title: {
		              display: true,
		              text: 'User Request Statistics'
		            }
		          }
		        }
		      });
	
		    })
		    .catch(function(err) {
		        console.error('통계 조회 실패:', err);
	      });
	}

</script>
</body>
