<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<link rel="apple-touch-icon" sizes="180x180" href="../../resources/img/guide/favicon_180.png">
	<link rel="icon" type="image/png" sizes="512x512" href="../../resources/img/guide/favicon_512.png">
	<link rel="icon" type="image/png" sizes="192x192"  href="../../resources/img/guide/favicon_192.png">
	<link rel="icon" type="image/png" sizes="32x32" href="../../resources/img/guide/favicon_32.png">
	<title>GINI - Global Innopolis Network Initiative</title>
	<link href="../../resources/css/swiper-bundle.min.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/pattern_css.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_common.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_content.css" type="text/css" rel="stylesheet" />
	<link href="../../resources/css/output/p_layout.css" type="text/css" rel="stylesheet" />

	 <link href='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.css' rel='stylesheet' />
	<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
	<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/locales/ko.global.min.js"></script>

</head>
<style>

	#content{
		    width: 80%;
    		margin: 0 auto;
			margin-bottom: 5%;
			margin-top: 2%;
	}
</style>
<body>
<!-- 컨테이너 영역 -->

		<c:if test="${empty sessionScope.loggedInUser}">
			<script type="text/javascript">
				alert("You can use it after logging in.");
				location.href = "${pageContext.request.contextPath}/login.do";
			
			</script>
		</c:if>
		<c:if test="${not empty sessionScope.loggedInUser and sessionScope.loggedInUser.role ne 'O'}">
			<script type="text/javascript">
				alert("You do not have permission to access this page.");
				location.href = "${pageContext.request.contextPath}/index.do";
			</script>
		</c:if>
<div id="container">
		
			<div class="page-title-wrap visual img-members">
				<div class="visual-filter"></div>
				<div class="inner">
					<!-- breadcrumb -->
					<nav class="breadcrumb-wrap" aria-label="브레드크럼">
						<ol class="breadcrumb">
							<li class="home"><a href="#" class="txt">Home</a></li>
							<li><a href="#" class="txt">Board</a></li>
						</ol>
					</nav>
					<!-- breadcrumb -->
					<!-- 페이지 타이틀 영역 -->
					<div class="visual-area">
						<h2 class="h-tit">Write a post</h2>
						<p>Write a post</p>
					</div>
				<!-- //페이지 타이틀 영역 -->
				</div>
			</div>  
			
			<!-- breadcrumb -->
	
			<!-- breadcrumb -->
		<form class="form-horizontal" id="form" name="form" action="${pageContext.request.contextPath}/board/boardInsert.do"
			method="post" enctype="multipart/form-data"   onsubmit="return validateFormAndSubmit()"> <!--  여기에 onsubmit 추가 -->
	
			<!-- 컨텐츠 영역 -->
			<div class="inner">
				<!-- 페이지 타이틀 영역 -->
				<!-- //페이지 타이틀 영역 -->
				<!-- 상세보기 영역 -->
				<div class="conts-area">
					<div class="conts-detail-wrap txt-box bg-white board-insert">
						<!-- real contents -->
						<div class="conts-wrap scroll-check">
							<div class="conts-wrap section-link" id="section_01">
								<!-- table list -->
								<div class="tbl-wrap">
									<dl class="tbl def-list">
										<dt class="form-tit">
											<label for="edit_title">Title</label>
										</dt>
										<dd>
											<div class="form-conts">
												<input type="text" id="edit_title" maxlength="100" class="form-control" autocomplete="on" placeholder="title" name="title">
											</div>
										</dd>
										<dt class="form-tit">
										    <label for="boardMasterCode">Board Type</label>
										</dt>
										<dd>
											<input type="hidden" id="boardMasterCodeInput" name="boardMasterCode" value="" />
										    <select id="boardMasterCode" class="form-control boardMasterCode" onchange="toggleThumbnailField(this.value)">
										        <option value="N01">GINI News</option>
										        <option value="N02">Members News</option>
										        <option value="N03">Media Release</option>
										        <option value="N04">Q&A</option>
										        <option value="N05">Members</option>
										        <option value="N06">Action Group</option>
										        <option value="A01">Publications</option>
										    </select>
										</dd>
										<dt class="form-tit"> 
											<label for="edit_content">Content</label>
										</dt>
										<dd>
											<div class="form-conts">
												<textarea rows="10" cols="50" id="edit_content"  maxlength="2000" class="form-control" name="content" placeholder="content" ></textarea>
											</div>
										</dd>
										<dt class="form-tit thumbnail-field">
										    <label for="edit_upload">Upload Thumbnail</label>
										</dt>
										<dd class="thumbnail-field">
										    <div class="form-group margin-b">
										        <div class="form-tit lg">
										          <div id="thumbnailText" style="color: #888;">Select an image.</div>
												   <img id="thumbnailPreviewImg"
													  class="img-fluid imgFileSaveLocate thumbnail-preview"
													  style="cursor: pointer; display: none;"
													  src=""
													  alt="Thumbnail Preview" />

										        </div>
										        <div class="form-conts row">
										            <input id="fileNm" type="text" maxlength="16" class="form-control" placeholder="Thumbnail file name" readonly>
										            <button type="button" class="btn lg secondary" onclick="document.getElementById('thumbnail').click()"> Search </button>
										        </div>
										        <p class="form-hint info">Allow up to 00 bytes</p>
										        <input type="file" name="thumbnailFile" id="thumbnail" style="display:none;" onchange="setThumbnailFileName();  previewThumbnail(event);"  />  
										    </div>
										</dd>
										<dt class="form-tit">
											<label for="edit_upload">Upload File</label>
										</dt>
										<dd>
											<div class="gini-cont-box">
											<div class="row">
												<!-- 파일업로드 -->
												<div class="file-upload cont50" ondragover="f_over()"   ondrop="f_drop()">
													<p class="txt">Please drag and drop the file you wish to attach here, or click the Select File button to select the file directly.</p>
													<button type="button" class="btn primary ico-before ico-upload md" onclick="document.getElementById('uploadFiles').click()">Select file</button>
													<input type="file" id="uploadFiles" name="uploadFiles" multiple style="display:none;"  onchange="handleFileUpload(event)" >
											
												</div>
												<!-- //파일업로드 -->
												<!-- 파일업로드 -->
												<div class="file-upload-result cont50">
													<div class="upload-top">
														<div class="file-total"><span class="current">0</span> / 6</div>
													</div>
													<ul class="upload-list" id="fileListArea">
													</ul>
													<div class="upload-delete-btn">
														<button type="button" class="btn btn-txt ico-before ico-del sm h-auto " onclick="deleteAllFiles()">delete all</button>
													</div>
												</div>
												<!-- //파일업로드 리스트 -->
												<!-- //폼그룹 -->
											</div>
											
										</div>
										</dd>
									</dl>
								</div>
								<!-- //table list -->
							</div>
														
						</div>
						<!-- //real contents -->
						 <div class="page-btn-wrap both">
							<div>
							
							<button type="button" class="btn xlg" onclick="history.back()">Go to list</button>
							
							</div>
							<div>
								<button type="submit" class="btn xlg tertiary">Register</button>
										 
							</div>
						</div>
					</div>
				</div>

</form>
				<!-- //상세보기 영역 -->
			</div>
		<!-- //컨테이너 영역 -->

		
</body>

<script type="text/javascript">

function previewThumbnail(event) {
	  const input = event.target;
	  const previewImg = document.getElementById('thumbnailPreviewImg');
	  const textGuide = document.getElementById('thumbnailText');

	  if (input.files && input.files[0]) {
	    const reader = new FileReader();
	    reader.onload = function (e) {
	      previewImg.src = e.target.result;
	      previewImg.style.display = 'block';
	      textGuide.style.display = 'none'; // 안내문 숨김
	    };
	    reader.readAsDataURL(input.files[0]);
	  } else {
	    previewImg.src = '';
	    previewImg.style.display = 'none';
	    textGuide.style.display = 'block'; // 안내문 표시
	  }
	}

function setThumbnailFileName() {
    const fileInput = document.getElementById("thumbnail");
    const fileNameInput = document.getElementById("fileNm");

    if (fileInput.files.length > 0) {
        const file = fileInput.files[0];
        const fileName = file.name;
        const extension = fileName.split('.').pop().toLowerCase();
        const allowedExtensions = ['jpg', 'jpeg', 'png'];

        if (!allowedExtensions.includes(extension)) {
            alert("Only image files (JPG, JPEG, PNG) are allowed as thumbnails.");
            fileInput.value = ''; 
            fileNameInput.value = '';
            return;
        }

        fileNameInput.value = fileName;
    } else {
        fileNameInput.value = "";
    }
}

function getParameterByName(name) {
    const url = window.location.href;
    const regex = new RegExp('[?&]' + name + '=([^&#]*)');
    const results = regex.exec(url);
    return results ? decodeURIComponent(results[1].replace(/\+/g, ' ')) : null;
  }

function toggleThumbnailField(code) {
	  const fields = document.querySelectorAll(".thumbnail-field");
	  const showCodes = ["N01", "N02", "N03", "A01"];
	  const shouldShow = showCodes.includes(code);

	  fields.forEach(function(field) {
	    field.style.display = shouldShow ? "block" : "none";
	  });

	  if (!shouldShow) {
	    // 썸네일 초기화
	    const fileInput = document.getElementById("thumbnail");
	    const fileNameInput = document.getElementById("fileNm");
	    const previewImg = document.getElementById("thumbnailPreviewImg");
	    const textGuide = document.getElementById("thumbnailText");

	    // 값 초기화
	    if (fileInput) fileInput.value = "";
	    if (fileNameInput) fileNameInput.value = "";
	    if (previewImg) {
	      previewImg.src = "";
	      previewImg.style.display = "none";
	    }
	    if (textGuide) textGuide.style.display = "block";
	  }
	}


// 최초 페이지 로드 시 적용
document.addEventListener("DOMContentLoaded", function() {
	const boardMasterCode = getParameterByName("boardMasterCode");
    const selectBox = document.getElementById("boardMasterCode");

    if (boardMasterCode && selectBox) {
      // select 박스 자동 선택
      selectBox.value = boardMasterCode;

      // 필드 표시/숨김 처리
      toggleThumbnailField(boardMasterCode);

      $('#boardMasterCodeInput').val(boardMasterCode);
      
      // 선택 못하게 막기
      selectBox.setAttribute("disabled", "disabled");
    }
});


let uploadedFiles = [];

function formatBytes(bytes) {
  if (bytes === 0) return '0KB';
  const k = 1024;
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  const size = parseFloat((bytes / Math.pow(k, i)).toFixed(1));
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  return `\${size} \${sizes[i]}`;
}

function updateFileCount() {
  const countSpan = document.querySelector('.file-total .current');
  const validCount = uploadedFiles.length;
  countSpan.textContent = `\${validCount}`;
}

function deleteAllFiles() {
  uploadedFiles = [];
  const fileListArea = document.getElementById('fileListArea');
  fileListArea.innerHTML = '';
  updateFileCount();
}

function handleFileUpload(event) {
  const files = event.target.files;
  const fileListArea = document.getElementById('fileListArea');

  console.log("파일 선택됨:", files);
  console.log("현재 uploadedFiles 배열:", uploadedFiles);
  for (let i = 0; i < files.length; i++) {
    const file = files[i];
    if (!files || files.length === 0) {
        console.warn("No file was selected.");
        return;
      }
    if (file.size > 20 * 1024 * 1024) {
      const li = document.createElement('li');
      li.classList.add('is-error');
      li.innerHTML = `
        <div class="in">
          <div class="file-name">\${file.name} [\${file.name.split('.').pop()}, \${formatBytes(file.size)}]</div>
          <div class="file-btn">
            <span class="ico-invalid error"><em class="sr-only">에러</em></span>
            <button type="button" class="btn btn-txt ico-before ico-del sm h-auto" onclick="this.closest('li').remove(); updateFileCount();">Delete</button>
          </div>
        </div>
        <p class="file-hint">
        The file size that can be registered has been exceeded.<br>Only files less than 20MB can be registered.</p>
      `;
      fileListArea.appendChild(li);
      continue;
    }

    if (uploadedFiles.length >= 6) {
      alert("You can register up to 6 files.");
      break;
    }

    uploadedFiles.push(file);
    const currentIndex = uploadedFiles.length - 1; // 배열의 인덱스

    const li = document.createElement('li');
    li.innerHTML = `
      <div class="in">
        <div class="file-name">\${file.name} [\${file.name.split('.').pop()}, \${formatBytes(file.size)}]</div>
        <div class="file-btn">
          <button type="button" class="btn btn-txt ico-before ico-del sm h-auto"
            onclick="deleteThisFile(this, '\${file.name}')">Delete</button>
        </div>
      </div>
    `;


    fileListArea.appendChild(li);
  }

  updateFileCount();
 // event.target.value = '';
}
function deleteThisFile(button, fileName) {
	  uploadedFiles = uploadedFiles.filter(file => file.name !== fileName);
	  button.closest('li').remove();
	  updateFileCount();
	}

function deleteSingleFile(index, button) {
  uploadedFiles.splice(index, 1);
  button.closest('li').remove();
  updateFileCount();
}

function validateFormAndSubmit() {
    var title = document.forms["form"]["title"].value.trim();
    var content = document.forms["form"]["content"].value.trim();
    var boardMasterCode = document.querySelector(".boardMasterCode").value.trim();
    if (title === "") {
    	 alert("Please enter a title.");
        return false;
    }
    if (title.length > 100) {
    	 alert("The title must be no more than 100 characters.");
        return false;
    }
    if (content === "") {
    	  alert("Please enter content.");
        return false;
    }
    if (content.length < 10) {
        alert("The content must be at least 10 characters.");
        return false;
    }
    if (content.length > 2000) {
        alert("The content must be no more than 2000 characters.");
        return false;
    }

    const formData = new FormData();

    formData.append("title", title);
    formData.append("content", content);
    formData.append("boardMasterCode", boardMasterCode);

    // 반 파일 업로드 추가
    uploadedFiles.forEach(file => {
        formData.append("uploadFiles", file);
    });

    // 썸네일 파일 추가
    const thumbnailInput = document.getElementById("thumbnail");
    if (thumbnailInput.files.length > 0) {
        formData.append("thumbnailFile", thumbnailInput.files[0]);
    }

    fetch("${pageContext.request.contextPath}/board/boardInsert.do", {
        method: "POST",
        body: formData
    }).then(response => {
        if (response.ok) {
        	  alert("Your post has been successfully submitted.");
        	  location.href = "${pageContext.request.contextPath}/board/boardList.do?boardMasterCode=" + boardMasterCode;

        } else {
        	 alert("An error occurred while submitting your post.");
        }
    });

    return false; // 기존 form 제출 막기
}


</script>
</html>