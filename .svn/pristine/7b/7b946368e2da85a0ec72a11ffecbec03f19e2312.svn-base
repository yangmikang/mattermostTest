package kr.go.distep.main.web;

import java.io.File;
import java.io.IOException;
import java.net.URLDecoder;
import java.nio.file.Files;

import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import lombok.extern.slf4j.Slf4j;

@Slf4j@Controller
public class UploadController {

	@ResponseBody
	@RequestMapping(value = "/download.do", method = RequestMethod.GET)
	public void download(@RequestParam("fileName") String fileName, HttpServletResponse response) {
	    try {
	        String decodedFileName = URLDecoder.decode(fileName, "UTF-8");

	        if (decodedFileName.startsWith("/resources/upload")) {
	            decodedFileName = decodedFileName.substring("/resources/upload".length());
	        }

	        String baseDir = "C:/resources/upload";
	        String fullPath = baseDir + decodedFileName.replace("/", File.separator);
	        File file = new File(fullPath);

	        if (!file.exists()) {
	            response.sendError(HttpServletResponse.SC_NOT_FOUND);
	            return;
	        }

	        String resourceName = file.getName();

	        // 파일 다운로드용 헤더 설정
	        response.setContentType("application/octet-stream");
	        response.setContentLengthLong(file.length());
	        response.setHeader("Content-Disposition", "attachment; filename=\"" +
	                new String(resourceName.getBytes("UTF-8"), "ISO-8859-1") + "\"");

	        // 파일 내용을 응답에 복사
	        Files.copy(file.toPath(), response.getOutputStream());
	        response.flushBuffer();

	    } catch (Exception e) {
	        try {
	            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	        } catch (IOException ioException) {
	            ioException.printStackTrace();
	        }
	    }
	}

}
